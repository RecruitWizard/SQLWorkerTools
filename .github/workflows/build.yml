name: Build & Test

on:
  push:
    branches:    
      - '**' # matches every branch
    paths: 
          - "**"    
          - "!.octopus/**"
          - "!.github/ISSUE_TEMPLATE/**"
          - "!.github/workflows/update-dependencies.yml"
  workflow_dispatch:

env:
  OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
  OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER_URL }}
  OCTOPUS_SPACE: 'Recruit Wizard'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.WizardsoftGitHubToken }}
        fetch-depth: 0
        submodules: 'recursive'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3     
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: '5.x'
        
    - name: Display GitVersion config
      id:   gitversion
      uses: gittools/actions/gitversion/execute@v0.10.2
      with:
        useConfigFile: true
        configFilePath: GitVersion.yml
        additionalArguments: "/updateprojectfiles"
        
    - name: Display GitVersion outputs
      run: |
        echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.assemblySemFileVer }}"
        echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
        echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
        echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}" 

    - name: Login to Azure Container Registry
      uses: docker/login-action@v3 
      with:
        registry: ${{ secrets.DOCKER_SERVER_URL }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Image 
      uses: docker/build-push-action@v5
      with:
        context: ubuntu.22.04    
        build-args: |
          version=${{ steps.gitversion.outputs.fullSemVer }}
        tags: worker-tools:${{ steps.gitversion.outputs.fullSemVer }}
        cache-to: local
 
    - name: List images
      run: |
         docker image ls
        
    - name: Build Tests Image
      run: |
        docker build . -t worker-tools-tests -f ubuntu.22.04/Tests.Dockerfile --build-arg ContainerUnderTest=worker-tools:${{ steps.gitversion.outputs.fullSemVer }}

    - name: Run Tests
      run: |
        docker run -it -v `pwd`:/app worker-tools-tests pwsh        